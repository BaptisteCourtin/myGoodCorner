# services:
#   backend:
#     build: ./backend
#     ports:
#       - 4000:4000
#     volumes:
#       - ./backend/src:/app/src
#       - ./backend/theGoodCornerORM.sqlite:/app/theGoodCornerORM.sqlite
#     env_file:
#       - ./.env
#     healthcheck:
#       test:
#         - CMD-SHELL
#         - "curl -f http://backend:4000/graphql?query=%7B__typename%7D -H 'Apollo-Require-Preflight: true' || exit 1"
#       interval: 10s
#       timeout: 30s
#       retries: 5

#   frontend:
#     build: ./frontend
#     ports:
#       - 3000:3000
#     volumes:
#       - ./frontend/src:/app/src
#     depends_on:
#       backend:
#         condition: service_healthy
#     env_file:
#       - ./.env

services:
  backend:
    build: ./backend
    ports:
      - "4000:4000"
    volumes:
      - "./backend/src:/app/src"
      - "./backend/thegoodcorner.sqlite:/app/thegoodcorner.sqlite"
    env_file:
      - ./.env
      - ./db.env
    healthcheck:
      test:
        - CMD-SHELL
        - "curl -f http://backend:4000/graphql?query=%7B__typename%7D -H 'Apollo-Require-Preflight: true' || exit 1"
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - "./frontend/src:/app/src"
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./.env

  db:
    image: postgres
    restart: always
    env_file:
      - ./db.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d theGoodCorner -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - gcdatabase:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  images:
    build: ./images
    volumes:
      - ./images/uploads:/app/uploads
    ports:
      - 3002:3002
    env_file:
      - ./.env

volumes:
  gcdatabase:
